{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyNMRQt/74xlyJzsHej7QN8+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"HsrWZHEPrDoP","colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"error","timestamp":1749539590047,"user_tz":-300,"elapsed":73,"user":{"displayName":"Saira Abdul Wahid","userId":"16666476152496714499"}},"outputId":"aac2487b-7259-4a6a-f570-3f4ee996b680"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'streamlit'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-2b0579e02e71>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# app.py\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mstreamlit\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mst\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'streamlit'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["# app.py\n","\n","import streamlit as st\n","import pandas as pd\n","import numpy as np\n","import joblib\n","import shap\n","import matplotlib.pyplot as plt\n","\n","# Load model\n","model = joblib.load('models/xgboost_optimized_model.pkl')\n","\n","# Load SHAP explainer\n","explainer = shap.TreeExplainer(model)\n","\n","st.set_page_config(page_title=\"Attrition Predictor\", layout=\"centered\")\n","st.title(\"ðŸ§  Employee Attrition Predictor\")\n","st.markdown(\"Predict whether an employee is likely to leave the company based on key HR metrics.\")\n","\n","# Sidebar input\n","st.sidebar.header(\"Enter Employee Information\")\n","\n","def user_input():\n","    Age = st.sidebar.slider(\"Age\", 18, 60, 35)\n","    MonthlyIncome = st.sidebar.slider(\"Monthly Income\", 1000, 20000, 5000)\n","    OverTime_Yes = st.sidebar.selectbox(\"Works Overtime?\", [\"Yes\", \"No\"])\n","    JobSatisfaction = st.sidebar.slider(\"Job Satisfaction (1-4)\", 1, 4, 3)\n","    EnvironmentSatisfaction = st.sidebar.slider(\"Environment Satisfaction (1-4)\", 1, 4, 3)\n","    DistanceFromHome = st.sidebar.slider(\"Distance From Home (km)\", 1, 50, 10)\n","    BusinessTravel_Travel_Frequently = st.sidebar.selectbox(\"Travels Frequently?\", [\"Yes\", \"No\"])\n","    NumCompaniesWorked = st.sidebar.slider(\"Number of Companies Worked\", 0, 10, 2)\n","    StockOptionLevel = st.sidebar.slider(\"Stock Option Level (0-3)\", 0, 3, 1)\n","    YearsWithCurrManager = st.sidebar.slider(\"Years with Current Manager\", 0, 20, 4)\n","    WorkLifeBalance = st.sidebar.slider(\"Work-Life Balance (1-4)\", 1, 4, 3)\n","\n","    data = {\n","        'Age': Age,\n","        'MonthlyIncome': MonthlyIncome,\n","        'OverTime_Yes': 1 if OverTime_Yes == \"Yes\" else 0,\n","        'JobSatisfaction': JobSatisfaction,\n","        'EnvironmentSatisfaction': EnvironmentSatisfaction,\n","        'DistanceFromHome': DistanceFromHome,\n","        'BusinessTravel_Travel_Frequently': 1 if BusinessTravel_Travel_Frequently == \"Yes\" else 0,\n","        'NumCompaniesWorked': NumCompaniesWorked,\n","        'StockOptionLevel': StockOptionLevel,\n","        'YearsWithCurrManager': YearsWithCurrManager,\n","        'WorkLifeBalance': WorkLifeBalance\n","    }\n","\n","    return pd.DataFrame([data])\n","\n","input_df = user_input()\n","\n","# Prediction\n","prediction = model.predict(input_df)[0]\n","probability = model.predict_proba(input_df)[0][1]\n","\n","# Display results\n","st.subheader(\"Prediction Result\")\n","st.write(\"Attrition Prediction:\", \"ðŸ”´ Yes\" if prediction == 1 else \"ðŸŸ¢ No\")\n","st.write(\"Probability of Leaving:\", f\"{probability:.2%}\")\n","\n","# SHAP Explanation\n","st.subheader(\"Model Explanation (SHAP)\")\n","shap_values = explainer.shap_values(input_df)\n","\n","st.set_option('deprecation.showPyplotGlobalUse', False)\n","plt.title(\"Feature Impact on Prediction\")\n","shap.force_plot(explainer.expected_value, shap_values[0], input_df.iloc[0], matplotlib=True, show=False)\n","st.pyplot(bbox_inches='tight')\n"]}]}